// <auto-generated />
using System;
using MağazaÜrünTakip.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MağazaÜrünTakip.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220129120054_deneme")]
    partial class deneme
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MağazaÜrünTakip.Models.Kategori", b =>
                {
                    b.Property<int>("KategoriId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KategoriId"), 1L, 1);

                    b.Property<string>("KategoriAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KategoriId");

                    b.ToTable("Kategoris");
                });

            modelBuilder.Entity("MağazaÜrünTakip.Models.Musteri", b =>
                {
                    b.Property<int>("MusteriId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MusteriId"), 1L, 1);

                    b.Property<string>("MusteriAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MusteriBakıye")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MusteriSehir")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MusteriSoyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MusteriId");

                    b.ToTable("Musterıs");
                });

            modelBuilder.Entity("MağazaÜrünTakip.Models.Personel", b =>
                {
                    b.Property<int>("PersonelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonelId"), 1L, 1);

                    b.Property<string>("PersonelAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonelDepartman")
                        .HasColumnType("int");

                    b.Property<string>("PersonelSoyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonelId");

                    b.ToTable("Personels");
                });

            modelBuilder.Entity("MağazaÜrünTakip.Models.Satıslar", b =>
                {
                    b.Property<int>("SatısId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SatısId"), 1L, 1);

                    b.Property<decimal>("Fİyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MusteriId")
                        .HasColumnType("int");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.Property<int>("UrunlerUrunId")
                        .HasColumnType("int");

                    b.HasKey("SatısId");

                    b.HasIndex("MusteriId");

                    b.HasIndex("PersonelId");

                    b.HasIndex("UrunlerUrunId");

                    b.ToTable("Satıslars");
                });

            modelBuilder.Entity("MağazaÜrünTakip.Models.Urunler", b =>
                {
                    b.Property<int>("UrunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UrunId"), 1L, 1);

                    b.Property<string>("AlısFıyat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Durum")
                        .HasColumnType("bit");

                    b.Property<int>("KategorıId")
                        .HasColumnType("int");

                    b.Property<string>("SatısFıyat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrunAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrunMarka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrunStok")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UrunId");

                    b.HasIndex("KategorıId");

                    b.ToTable("Uruns");
                });

            modelBuilder.Entity("MağazaÜrünTakip.Models.Satıslar", b =>
                {
                    b.HasOne("MağazaÜrünTakip.Models.Musteri", "Musteri")
                        .WithMany("Satıslar")
                        .HasForeignKey("MusteriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MağazaÜrünTakip.Models.Personel", "Personel")
                        .WithMany("Satıslar")
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MağazaÜrünTakip.Models.Urunler", "Urunler")
                        .WithMany("Satıslar")
                        .HasForeignKey("UrunlerUrunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Musteri");

                    b.Navigation("Personel");

                    b.Navigation("Urunler");
                });

            modelBuilder.Entity("MağazaÜrünTakip.Models.Urunler", b =>
                {
                    b.HasOne("MağazaÜrünTakip.Models.Kategori", "Kategorı")
                        .WithMany("Urunler")
                        .HasForeignKey("KategorıId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategorı");
                });

            modelBuilder.Entity("MağazaÜrünTakip.Models.Kategori", b =>
                {
                    b.Navigation("Urunler");
                });

            modelBuilder.Entity("MağazaÜrünTakip.Models.Musteri", b =>
                {
                    b.Navigation("Satıslar");
                });

            modelBuilder.Entity("MağazaÜrünTakip.Models.Personel", b =>
                {
                    b.Navigation("Satıslar");
                });

            modelBuilder.Entity("MağazaÜrünTakip.Models.Urunler", b =>
                {
                    b.Navigation("Satıslar");
                });
#pragma warning restore 612, 618
        }
    }
}
